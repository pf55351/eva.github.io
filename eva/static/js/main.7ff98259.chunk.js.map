{"version":3,"sources":["logo.svg","component/Alert.js","services/UtilService.js","Message.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","typeAlert","titleAlert","showAlert","setShowAlert","address","hideAlert","show","showConfirm","type","title","onConfirm","href","rel","target","onClick","className","rounded","color","serverPath","process","verifyAddressService","data","a","axios","post","result","messages","INPUT_ERROR","INPUT_ERROR_LENGTH","App","Input","Form","useState","ethAddress","setEthAddress","colorInput","setColorInput","errorMsg","setErrorMsg","setTypeAlert","setTitleAlert","setShow","controlInput","addr","check","Message","length","size","Header","src","logo","alt","Body","value","onChange","e","placeholder","light","preventDefault","token","then","res","msg","verifyAddress","Footer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ff98259.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b3ec96d9.svg\";","import SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport {Button} from \"react-bulma-components\";\r\n\r\nfunction Alert({typeAlert,titleAlert,showAlert,setShowAlert,address}) {\r\n const hideAlert = () => setShowAlert(false);\r\n\r\n \r\n  \r\n return (\r\n    <div>\r\n      <SweetAlert show={showAlert} showConfirm={false} type={typeAlert}  title={titleAlert} onConfirm={hideAlert} >\r\n        <p>More info are avaiable <a href={`https://etherscan.io/address/${address}`} rel=\"noreferrer\" target=\"_blank\">here</a></p>\r\n        <div>\r\n        <Button onClick={() => hideAlert()}\r\n              className=\"App-item\"\r\n              rounded=\"true\"\r\n              color={typeAlert}\r\n            >\r\n              Ok\r\n            </Button>\r\n            </div>\r\n      </SweetAlert>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import axios from \"axios\"\r\n\r\nconst serverUrl=process.env.REACT_APP_API_URL\r\nconst serverPort=process.env.REACT_APP_API_PORT\r\nconst serverContext=process.env.REACT_APP_API_CONTEXT\r\n\r\nconst serverPath=`${serverUrl}:${serverPort}${serverContext}`\r\n\r\nconst verifyAddressService = async data => {\r\n    const endPoint=process.env.REACT_APP_IS_VALID_ADDRESS_SERVICE\r\n    const result = await axios.post(`${serverPath}${endPoint}`,data);\r\n    return result.data\r\n}\r\n\r\nexport {verifyAddressService}","const messages = {\r\n    INPUT_ERROR:'No address typed. Please type an address!',\r\n    INPUT_ERROR_LENGTH:'Address length must be 42 characters'\r\n\r\n}\r\nexport default messages;\r\n","import { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\nimport { Form } from \"react-bulma-components\";\nimport {\n  Button,\n  Heading,\n  Footer,\n  Container,\n  Content,\n  Hero,\n  Block,\n  Notification,\n} from \"react-bulma-components\";\nimport Alert from \"./component/Alert\";\nimport { verifyAddressService } from \"./services/UtilService\";\nimport Message from \"./Message\";\n\nfunction App() {\n  const { Input } = Form;\n  const [ethAddress, setEthAddress] = useState(\n    \"0xFecC9Bf3ECCE9482cCfa8b71206fD60cf58525e5\"\n  );\n  const [colorInput, setColorInput] = useState(\"primary\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [typeAlert, setTypeAlert] = useState(\"custom\");\n  const [titleAlert, setTitleAlert] = useState(\"\");\n  const [show, setShow] = useState(false);\n\n  const verifyAddress = (e) => {\n    e.preventDefault();\n    setErrorMsg(\"\");\n    if (controlInput(ethAddress)) {\n      const token = process.env.REACT_APP_TOKEN;\n      const data = { token, ethAddress };\n      verifyAddressService(data).then((result) => {\n        if (result.res === \"OK\") {\n          setTypeAlert(\"success\");\n        } else {\n          setTypeAlert(\"danger\");\n        }\n        setTitleAlert(result.msg);\n        setShow(true);\n      });\n    }\n  };\n\n  const controlInput = (addr) => {\n    let errorMsg = \"\";\n    let check = true;\n    if (addr === \"\") {\n      check = false;\n      errorMsg = Message.INPUT_ERROR;\n    } else if (addr.length !== 42) {\n      check = false;\n      errorMsg = Message.INPUT_ERROR_LENGTH;\n    }\n    if (!check) {\n      setErrorMsg(errorMsg);\n      setColorInput(\"danger\");\n    }\n    return check;\n  };\n  const handleInputChange = (value) => {\n    setColorInput(\"primary\");\n    setErrorMsg(\"\");\n    setEthAddress(value);\n  };\n  return (\n    <>\n      <Alert\n        showAlert={show}\n        typeAlert={typeAlert}\n        titleAlert={titleAlert}\n        setShowAlert={setShow}\n        address={ethAddress}\n      />\n      <div className=\"App\">\n        <Hero size=\"fullheight\">\n          <Hero.Header>\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <Heading>Welcome to EVA</Heading>\n              <Heading>Ethereum Verification Address</Heading>\n            </header>\n          </Hero.Header>\n          <Hero.Body>\n            <Container className=\"App-body\">\n              <Input\n                size=\"medium\"\n                rounded=\"true\"\n                color={colorInput}\n                className=\"App-item\"\n                value={ethAddress}\n                onChange={(e) => handleInputChange(e.target.value)}\n                placeholder=\"Write Ethereum address here\"\n              />\n              {errorMsg !== \"\" && (\n                <Block>\n                  <Notification color=\"danger\" light=\"true\">\n                    <strong>{errorMsg}</strong>\n                  </Notification>\n                </Block>\n              )}\n              <Button\n                onClick={(e) => verifyAddress(e)}\n                className=\"App-item\"\n                size=\"medium\"\n                rounded=\"true\"\n                color=\"primary\"\n              >\n                Verify Address\n              </Button>\n            </Container>\n          </Hero.Body>\n          <Hero.Footer>\n            <Footer>\n              <Container>\n                <Content>\n                  <p>\n                    <strong>EVA</strong> by{\" \"}\n                    <a href=\"https://www.francescoprimerano.it\" rel=\"noreferrer\" target=\"_blank\">\n                      Francesco Primerano\n                    </a>\n                    . The source code is licensed under\n                    <a href=\"http://opensource.org/licenses/mit-license.php\">\n                      {\" \"}\n                      MIT\n                    </a>\n                  </p>\n                  <p>The repository of this project is avaiable on <a href=\"https://github.com/pf55351/eva\" rel=\"noreferrer\" target=\"_blank\">github</a></p>\n                </Content>\n              </Container>\n            </Footer>\n          </Hero.Footer>\n        </Hero>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}